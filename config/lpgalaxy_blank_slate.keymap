/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BT(n) BT_SEL n

/ {
    chosen {
       zmk,matrix_transform = &mit_transform;
    };

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
        
        combo_adjust {
            timeout-ms = <50>;
            key-positions = <40 42>;
            bindings = <&mo 4>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
            &kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T      &kp Y      &kp U      &kp I       &kp O       &kp P       &kp BKSP
            &mo 1      &kp A      &kp S     &kp D     &kp F      &kp G      &kp H      &kp J      &kp K       &kp L       &kp SEMI    &kp RET
            &kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B      &kp N      &kp M      &kp CMMA    &kp DOT     &kp SLASH   &kp RSHFT 
            &trans     &kp LCTRL  &kp LALT  &kp LGUI  &mo 3            &kp SPACE       &mo 2      &kp RGUI    &kp RALT    &kp RCTRL   &trans
            >;
        };

        nav_layer {
            bindings = <    
            &trans      &C_BRI_D   &C_BRI_UP &trans    &trans     &C_PREV    &C_PP      &C_NEXT    &UP         &C_MUTE    &C_VOL_DN   &C_VOL_UP
            &trans      &trans     &trans    &trans    &trans     &trans     &trans     &LEFT      &DOWN       &RIGHT      &trans      &trans
            &trans      &trans     &trans    &trans    &trans     &trans     &trans     &trans     &trans      &trans      &trans      &trans
            &trans      &trans     &trans    &trans    &trans           &trans          &trans     &trans      &bt BT_CLR  &bt BT_PRV  &bt BT_NXT
            >;
        };

        programmer_layer {
            bindings = <
            &GRAVE      &trans     &trans    &trans    &trans     &trans     &DQL       &LPAR      &RPAR       &trans      &MINUS      &EQUAL
            &trans      &trans     &trans    &trans    &trans     &trans     &SQT       &LBRC      &RBRC       &trans      &trans      &BSLH
            &trans      &trans     &trans    &trans    &trans     &trans     &trans     &LBKT      &RBKT       &trans      &trans      &trans
            &trans      &trans     &trans    &trans    &trans           &trans          &trans     &trans      &trans      &trans      &trans
            >;
        };

        num_layer {
            bindings = <
            &trans      &N1        &N2       &N3       &N4        &N5        &N6        &N7        &N8         &N9         &N0         &trans
            &trans      &trans     &trans    &trans    &trans     &trans     &trans     &trans     &trans      &trans      &trans      &trans
            &trans      &trans     &trans    &trans    &trans     &trans     &trans     &trans     &trans      &trans      &trans      &trans
            &trans      &trans     &trans    &trans    &trans           &trans          &trans     &trans      &trans      &trans      &trans
            >;
        };
        
        adjust_layer {
            bindings = <
            &trans      &kp EXCL   &kp AT    &kp HASH  &kp DLLR   &kp PRCNT  &kp CARET  &kp AMPS   &kp ASTRK   &kp LPAR    &kp RPAR    &trans
            &trans      &trans     &trans    &trans    &trans     &trans     &trans     &trans     &trans      &trans      &trans      &trans
            &trans      &trans     &trans    &trans    &trans     &trans     &trans     &trans     &trans      &trans      &trans      &trans
            &trans      &trans     &trans    &trans    &trans           &trans          &trans     &trans      &trans      &trans      &trans
            >;
        };
    };
};